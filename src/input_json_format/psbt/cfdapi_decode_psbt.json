{
  "namespace": ["cfd","js","api","json"],
  "functionName": "DecodePsbt",
  "request": {
    ":class": "DecodePsbtRequest",
    ":class:comment": "request for decode psbt.",
    "psbt": "",
    "psbt:require": "require",
    "psbt:comment": "psbt data (hex or base64)",
    "network": "mainnet",
    "network:require": "optional",
    "network:comment": "network type",
    "network:hint": "mainnet, testnet, regtest",
    "hasDetail": false,
    "hasDetail:require": "optional",
    "hasDetail:comment": "detail dump option.",
    "hasSimple": false,
    "hasSimple:require": "optional",
    "hasSimple:comment": "simple dump option."
  },
  "response": {
    ":class": "DecodePsbtResponse",
    ":class:comment": "response data of decode psbt.",
    "tx:require": "optional",
    "tx:comment": "transaction data. If hasDetail and hasSimple are true, this field is disabled.",
    "tx": {
      ":class": "DecodeRawTransactionResponse",
      "txid": "",
      "txid:require": "require",
      "txid:comment": "txid",
      "hash": "",
      "hash:require": "require",
      "hash:comment": "transaction hash",
      "hash:hint": "txid or wtxid",
      "version": 0,
      "version:type": "uint32_t",
      "version:require": "require",
      "version:comment": "transaction version",
      "size": 0,
      "size:type": "uint32_t",
      "size:require": "require",
      "size:comment": "transaction size",
      "vsize": 0,
      "vsize:type": "uint32_t",
      "vsize:require": "require",
      "vsize:comment": "transaction vsize",
      "weight": 0,
      "weight:type": "uint32_t",
      "weight:require": "require",
      "weight:comment": "weight",
      "locktime": 0,
      "locktime:type": "uint32_t",
      "locktime:require": "require",
      "locktime:comment": "locktime",
      "vin:require": "optional",
      "vin:comment": "txin list",
      "vin": [
        {
          ":class": "DecodeRawTransactionTxIn",
          ":class:comment": "decode txin data",
          "coinbase": "",
          "coinbase:require": "optional",
          "coinbase:comment": "coinbase flag", 
          "coinbase:hint": "coinbase is only", 
          "txid": "",
          "txid:require": "optional",
          "txid:comment": "utxo txid",
          "vout": 0,
          "vout:type": "uint32_t",
          "vout:require": "optional",
          "vout:comment": "utxo vout",
          "scriptSig:require": "optional",
          "scriptSig:comment": "scriptsig",
          "scriptSig": {
            ":class": "DecodeUnlockingScript",
            ":class:comment": "script data",
            "asm": "",
            "asm:require": "require",
            "asm:comment": "script asm string",
            "hex": "",
            "hex:require": "require",
            "hex:comment": "script hex"
          },
          "txinwitness:require": "optional",
          "txinwitness:comment": "txin witness stack",
          "txinwitness": [
            ""
          ],
          "sequence": 0,
          "sequence:type": "uint32_t",
          "sequence:require": "optional",
          "sequence:comment": "sequence number"
        }
      ],
      "vout:require": "optional",
      "vout:comment": "txout list",
      "vout": [
        {
          ":class": "DecodeRawTransactionTxOut",
          ":class:comment": "txout data",
          "value": 0,
          "value:type": "int64_t",
          "value:require": "optional",
          "value:comment": "satoshi amount",
          "n": 0,
          "n:require": "require",
          "n:type": "uint32_t",
          "n:comment": "vout number",
          "scriptPubKey:require": "optional",
          "scriptPubKey:comment": "locking script",
          "scriptPubKey": {
            ":class": "DecodeLockingScript",
            ":class:comment": "locking script data",
            "asm": "",
            "asm:require": "optional",
            "asm:comment": "script asm string",
            "hex": "",
            "hex:require": "optional",
            "hex:comment": "script hex",
            "reqSigs": 0,
            "reqSigs:type": "int",
            "reqSigs:require": "optional",
            "reqSigs:comment": "require signature num",
            "type": "",
            "type:require": "optional",
            "type:comment": "script type",
            "addresses:require": "optional",
            "addresses:comment": "address list",
            "addresses": [
              ""
            ]
          }
        }
      ]
    },
    "tx_hex": "",
    "tx_hex:require": "optional",
    "tx_hex:comment": "If hasDetail is true, tx hex set.",
    "xpubs:require": "optional",
    "xpubs:comment": "If hasDetail is true, this field is set. (remove from global unknown)",
    "xpubs": [
      {
        ":class": "PsbtGlobalXpub",
        ":class:comment": "psbt global xpub data",
        "xpub:require": "require",
        "xpub:comment": "xpub data",
        "xpub": {
          ":class": "XpubData",
          ":class:comment": "xpub data",
          "base58": "",
          "base58:require": "require",
          "base58:comment": "xpub base58 string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "xpub hex string"
        },
        "master_fingerprint": "",
        "master_fingerprint:require": "require",
        "master_fingerprint:comment": "master pubkey fingerprint.",
        "path": "",
        "path:require": "require",
        "path:comment": "bip32 path.",
        "descriptorXpub": "",
        "descriptorXpub:require": "require",
        "descriptorXpub:comment": "the descriptor xpub string."
      }
    ],
    "version": 0,
    "version:type": "uint32_t",
    "version:require": "optional",
    "version:comment": "If hasDetail is true, psbt version set. (remove from global unknown)",
    "unknown:require": "optional",
    "unknown:comment": "PSBT global unknowns. If list is empty and hasSimple is true, exclude list.",
    "unknown": [{
      ":class": "PsbtMapData",
      ":class:comment": "psbt map data.",
      "key": "",
      "key:require": "require",
      "key:comment": "key hex",
      "value": "",
      "value:require": "require",
      "value:comment": "value hex"
    }],
    "inputs:require": "require",
    "inputs:comment": "PSBT inputs",
    "inputs": [
      {
        ":class": "DecodePsbtInput",
        ":class:comment": "psbt input data",
        "non_witness_utxo_hex": "",
        "non_witness_utxo_hex:require": "optional",
        "non_witness_utxo_hex:comment": "If hasDetail is true, tx hex for not witness set.",
        "non_witness_utxo:require": "optional",
        "non_witness_utxo:comment": "utxo for not witness. If hasDetail and hasSimple are true, this field is disabled.",
        "non_witness_utxo": {
          ":class": "DecodeRawTransactionResponse",
          "txid": "",
          "txid:require": "require",
          "txid:comment": "txid",
          "hash": "",
          "hash:require": "require",
          "hash:comment": "transaction hash",
          "hash:hint": "txid or wtxid",
          "version": 0,
          "version:type": "uint32_t",
          "version:require": "require",
          "version:comment": "transaction version",
          "size": 0,
          "size:type": "uint32_t",
          "size:require": "require",
          "size:comment": "transaction size",
          "vsize": 0,
          "vsize:type": "uint32_t",
          "vsize:require": "require",
          "vsize:comment": "transaction vsize",
          "weight": 0,
          "weight:type": "uint32_t",
          "weight:require": "require",
          "weight:comment": "weight",
          "locktime": 0,
          "locktime:type": "uint32_t",
          "locktime:require": "require",
          "locktime:comment": "locktime",
          "vin:require": "optional",
          "vin:comment": "txin list",
          "vin": [
            {
              ":class": "DecodeRawTransactionTxIn",
              ":class:comment": "decode txin data",
              "coinbase": "",
              "coinbase:require": "optional",
              "coinbase:comment": "coinbase flag", 
              "coinbase:hint": "coinbase is only", 
              "txid": "",
              "txid:require": "optional",
              "txid:comment": "utxo txid",
              "vout": 0,
              "vout:type": "uint32_t",
              "vout:require": "optional",
              "vout:comment": "utxo vout",
              "scriptSig:require": "optional",
              "scriptSig:comment": "scriptsig",
              "scriptSig": {
                ":class": "DecodeUnlockingScript",
                ":class:comment": "script data",
                "asm": "",
                "asm:require": "require",
                "asm:comment": "script asm string",
                "hex": "",
                "hex:require": "require",
                "hex:comment": "script hex"
              },
              "txinwitness:require": "optional",
              "txinwitness:comment": "txin witness stack",
              "txinwitness": [
                ""
              ],
              "sequence": 0,
              "sequence:type": "uint32_t",
              "sequence:require": "optional",
              "sequence:comment": "sequence number"
            }
          ],
          "vout:require": "optional",
          "vout:comment": "txout list",
          "vout": [
            {
              ":class": "DecodeRawTransactionTxOut",
              ":class:comment": "txout data",
              "value": 0,
              "value:type": "int64_t",
              "value:require": "optional",
              "value:comment": "satoshi amount",
              "n": 0,
              "n:require": "require",
              "n:type": "uint32_t",
              "n:comment": "vout number",
              "scriptPubKey:require": "optional",
              "scriptPubKey:comment": "locking script",
              "scriptPubKey": {
                ":class": "DecodeLockingScript",
                ":class:comment": "locking script data",
                "asm": "",
                "asm:require": "optional",
                "asm:comment": "script asm string",
                "hex": "",
                "hex:require": "optional",
                "hex:comment": "script hex",
                "reqSigs": 0,
                "reqSigs:type": "int",
                "reqSigs:require": "optional",
                "reqSigs:comment": "require signature num",
                "type": "",
                "type:require": "optional",
                "type:comment": "script type",
                "addresses:require": "optional",
                "addresses:comment": "address list",
                "addresses": [
                  ""
                ]
              }
            }
          ]
        },
        "witness_utxo:require": "optional",
        "witness_utxo:comment": "utxo for witness",
        "witness_utxo": {
          ":class": "DecodePsbtUtxo",
          ":class:comment": "psbt witness utxo",
          "amount": 0,
          "amount:require": "require",
          "amount:comment": "psbt witness utxo",
          "scriptPubKey": {
            ":class": "DecodePsbtLockingScript",
            "asm": "",
            "asm:require": "optional",
            "asm:comment": "script asm string",
            "hex": "",
            "hex:require": "optional",
            "hex:comment": "script hex",
            "type": "",
            "type:require": "optional",
            "type:comment": "script type",
            "address": "",
            "address:require": "optional",
            "address:comment": "address"
          }
        },
        "partial_signatures:require": "optional",
        "partial_signatures:comment": "signature",
        "partial_signatures": [{
          ":class": "PsbtSignatureData",
          ":class:comment": "psbt signature data.",
          "pubkey": "",
          "pubkey:require": "optional",
          "pubkey:comment": "pubkey hex",
          "signature": "",
          "signature:require": "optional",
          "signature:comment": "signature hex"
        }],
        "sighash": "",
        "sighash:require": "optional",
        "sighash:comment": "sighash type",
        "sighash:hint": "ALL, SINGLE, NONE",
        "redeem_script:require": "optional",
        "redeem_script:comment": "redeem script",
        "redeem_script": {
          ":class": "PsbtScriptData",
          ":class:comment": "psbt script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex",
          "type": "",
          "type:require": "optional",
          "type:comment": "script type"
        },
        "witness_script:require": "optional",
        "witness_script:comment": "witness script",
        "witness_script": {
          ":class": "PsbtScriptData",
          ":class:comment": "psbt script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex",
          "type": "",
          "type:require": "optional",
          "type:comment": "script type"
        },
        "bip32_derivs:require": "optional",
        "bip32_derivs:comment": "bip32 derive pubkey",
        "bip32_derivs": [
          {
            ":class": "PsbtBip32Data",
            ":class:comment": "psbt script data",
            "pubkey": "",
            "pubkey:require": "require",
            "pubkey:comment": "pubkey hex",
            "master_fingerprint": "",
            "master_fingerprint:require": "require",
            "master_fingerprint:comment": "master pubkey fingerprint.",
            "path": "",
            "path:require": "require",
            "path:comment": "bip32 path.",
            "descriptor": "",
            "descriptor:require": "optional",
            "descriptor:comment": "If hasDetail is true, the descriptor pubkey string is set."
          }
        ],
        "final_scriptsig:require": "optional",
        "final_scriptsig:comment": "final scriptsig",
        "final_scriptsig": {
          ":class": "DecodeUnlockingScript",
          ":class:comment": "script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex"
        },
        "final_scriptwitness": [""],
        "final_scriptwitness:require": "optional",
        "final_scriptwitness:comment": "final witness stack",
        "unknown:require": "optional",
        "unknown:comment": "unknown record",
        "unknown": [
          {
            ":class": "PsbtMapData",
            ":class:comment": "psbt map data.",
            "key": "",
            "key:require": "require",
            "key:comment": "key hex",
            "value": "",
            "value:require": "require",
            "value:comment": "value hex"
          }
        ]
      }
    ],
    "outputs:require": "require",
    "outputs:comment": "PSBT outputs",
    "outputs": [
      {
        ":class": "DecodePsbtOutput",
        ":class:comment": "psbt output data",
        "redeem_script:require": "optional",
        "redeem_script:comment": "redeem script",
        "redeem_script": {
          ":class": "PsbtScriptData",
          ":class:comment": "psbt script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex",
          "type": "",
          "type:require": "optional",
          "type:comment": "script type"
        },
        "witness_script:require": "optional",
        "witness_script:comment": "witness script",
        "witness_script": {
          ":class": "PsbtScriptData",
          ":class:comment": "psbt script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex",
          "type": "",
          "type:require": "optional",
          "type:comment": "script type"
        },
        "bip32_derivs:require": "optional",
        "bip32_derivs:comment": "bip32 derive pubkey",
        "bip32_derivs": [
          {
            ":class": "PsbtBip32Data",
            ":class:comment": "psbt script data",
            "pubkey": "",
            "pubkey:require": "require",
            "pubkey:comment": "pubkey hex",
            "master_fingerprint": "",
            "master_fingerprint:require": "require",
            "master_fingerprint:comment": "master pubkey fingerprint.",
            "path": "",
            "path:require": "require",
            "path:comment": "bip32 path.",
            "descriptor": "",
            "descriptor:require": "optional",
            "descriptor:comment": "If hasDetail is true, the descriptor pubkey string is set."
          }
        ],
        "unknown:require": "optional",
        "unknown:comment": "unknown record",
        "unknown": [
          {
            ":class": "PsbtMapData",
            ":class:comment": "psbt map data.",
            "key": "",
            "key:require": "require",
            "key:comment": "key hex",
            "value": "",
            "value:require": "require",
            "value:comment": "value hex"
          }
        ]
      }
    ],
    "fee": 0,
    "fee:require": "optional",
    "fee:comment": "If all utxos filled, this field has set fee amount."
  }
}