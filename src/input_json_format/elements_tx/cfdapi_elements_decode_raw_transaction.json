{
  "namespace": ["cfd","js","api","json"],
  "comment": "Decode Elements transaction",
  "request": {
    ":class": "ElementsDecodeRawTransactionRequest",
    ":class:comment": "Request for decode transaction.",
    "hex": "",
    "hex:require": "require",
    "hex:comment": "transaction hex",
    "network": "liquidv1",
    "network:comment": "elements network type",
    "network:hint": "liquidv1, regtest",
    "network:require": "optional",
    "mainchainNetwork": "",
    "mainchainNetwork:comment": "mainchain network type",
    "mainchainNetwork:hint": "mainnet, testnet, regtest or blank. Must be set for pegout transactions.",
    "mainchainNetwork:require": "optional",
    "iswitness": true,
    "iswitness:require": "optional",
    "iswitness:comment": "dump witness (unused)",
    "fullDump": false,
    "fullDump:require": "optional",
    "fullDump:comment": "tx data all dump option."
  },
  "response": {
    ":class": "ElementsDecodeRawTransactionResponse",
    ":class:comment": "Response of decode transaction.",
    "txid": "",
    "txid:require": "require",
    "txid:comment": "txid",
    "hash": "",
    "hash:require": "require",
    "hash:comment": "transaction hash",
    "wtxid": "",
    "wtxid:require": "require",
    "wtxid:comment": "witness txid",
    "withash": "",
    "withash:require": "require",
    "withash:comment": "withash",
    "version": 0,
    "version:type": "uint32_t",
    "version:require": "require",
    "version:comment": "transaction version",
    "size": 0,
    "size:type": "uint32_t",
    "size:require": "require",
    "size:comment": "transaction size",
    "vsize": 0,
    "vsize:type": "uint32_t",
    "vsize:require": "require",
    "vsize:comment": "transaction vsize",
    "weight": 0,
    "weight:type": "uint32_t",
    "weight:require": "require",
    "weight:comment": "weight",
    "locktime": 0,
    "locktime:type": "uint32_t",
    "locktime:require": "require",
    "locktime:comment": "locktime",
    "vin:require": "optional",
    "vin:comment": "txin list",
    "vin": [
      {
        ":class": "ElementsDecodeRawTransactionTxIn",
        ":class:comment": "decode txin data",
        "coinbase": "",
        "coinbase:require": "optional",
        "coinbase:comment": "coinbase flag", 
        "coinbase:hint": "coinbase is only", 
        "txid": "",
        "txid:require": "optional",
        "txid:comment": "utxo txid",
        "vout": 0,
        "vout:type": "uint32_t",
        "vout:require": "optional",
        "vout:comment": "utxo vout",
        "scriptSig:require": "optional",
        "scriptSig:comment": "scriptsig",
        "scriptSig": {
          ":class": "DecodeUnlockingScript",
          ":class:comment": "script data",
          "asm": "",
          "asm:require": "require",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "require",
          "hex:comment": "script hex"
        },
        "is_pegin": false,
        "is_pegin:require": "optional",
        "is_pegin:comment": "pegin flag",
        "sequence": 0,
        "sequence:require": "optional",
        "sequence:comment": "sequence number",
        "txinwitness:require": "optional",
        "txinwitness:comment": "txin witness stack",
        "txinwitness": [
          ""
        ],
        "pegin_witness:require": "optional",
        "pegin_witness:comment": "pegin witness stack",
        "pegin_witness": [
          ""
        ],
        "issuance:require": "optional",
        "issuance:comment": "issuance data",
        "issuance": {
          ":class": "ElementsDecodeIssuance",
          ":class:comment": "issuance data",
          "assetBlindingNonce": "",
          "assetBlindingNonce:require": "require",
          "assetBlindingNonce:comment": "utxo asset blinder",
          "assetEntropy": "",
          "assetEntropy:require": "require",
          "assetEntropy:comment": "asset entropy",
          "contractHash": "",
          "contractHash:require": "optional",
          "contractHash:comment": "issue original entropy data.",
          "isreissuance": false,
          "isreissuance:require": "require",
          "isreissuance:comment": "reissuance flag",
          "token": "",
          "token:require": "optional",
          "token:comment": "token asset",
          "asset": "",
          "asset:require": "optional",
          "asset:comment": "issued asset",
          "assetamount": 0,
          "assetamount:type": "int64_t",
          "assetamount:require": "optional",
          "assetamount:comment": "issued satoshi amount",
          "assetamountcommitment": "",
          "assetamountcommitment:require": "optional",
          "assetamountcommitment:comment": "issued amountcommitment",
          "tokenamount": 0,
          "tokenamount:type": "int64_t",
          "tokenamount:require": "optional",
          "tokenamount:comment": "token amount",
          "tokenamountcommitment": "",
          "tokenamountcommitment:require": "optional",
          "tokenamountcommitment:comment": "token amountcommitment",
          "assetRangeproof": "",
          "assetRangeproof:require": "optional",
          "assetRangeproof:comment": "asset rangeproof",
          "assetRangeproof:hint": "Displayed only when the full dump option is used.",
          "tokenRangeproof": "",
          "tokenRangeproof:require": "optional",
          "tokenRangeproof:comment": "token rangeproof",
          "tokenRangeproof:hint": "Displayed only when the full dump option is used."
        }
      }
    ],
    "vout:require": "optional",
    "vout:comment": "txout list",
    "vout": [
      {
        ":class": "ElementsDecodeRawTransactionTxOut",
        ":class:comment": "txout data",
        "value": 0,
        "value:type": "int64_t",
        "value:require": "optional",
        "value:comment": "satoshi amount",
        "value-minimum": 0,
        "value-minimum:type": "int64_t",
        "value-minimum:require": "optional",
        "value-minimum:comment": "blind minimum value",
        "value-maximum": 0,
        "value-maximum:type": "int64_t",
        "value-maximum:require": "optional",
        "value-maximum:comment": "blind maximum value",
        "ct-exponent": 0,
        "ct-exponent:type": "int",
        "ct-exponent:require": "optional",
        "ct-exponent:comment": "blinding exponent",
        "ct-bits": 0,
        "ct-bits:type": "int",
        "ct-bits:require": "optional",
        "ct-bits:comment": "blinding bits",
        "surjectionproof": "",
        "surjectionproof:require": "optional",
        "surjectionproof:comment": "surjectionproof",
        "valuecommitment": "",
        "valuecommitment:require": "optional",
        "valuecommitment:comment": "valuecommitment",
        "asset": "",
        "asset:require": "optional",
        "asset:comment": "asset",
        "assetcommitment": "",
        "assetcommitment:require": "optional",
        "assetcommitment:comment": "assetcommitment",
        "commitmentnonce": "",
        "commitmentnonce:require": "optional",
        "commitmentnonce:comment": "confidentialKey or commitmentnonce",
        "commitmentnonce_fully_valid": false,
        "commitmentnonce_fully_valid:require": "optional",
        "commitmentnonce_fully_valid:comment": "valid nonce",
        "n": 0,
        "n:type": "uint32_t",
        "n:require": "require",
        "n:comment": "vout number",
        "scriptPubKey:require": "optional",
        "scriptPubKey:comment": "locking script",
        "scriptPubKey": {
          ":class": "ElementsDecodeLockingScript",
          ":class:comment": "locking script data",
          "asm": "",
          "asm:require": "optional",
          "asm:comment": "script asm string",
          "hex": "",
          "hex:require": "optional",
          "hex:comment": "script hex",
          "reqSigs": 0,
          "reqSigs:type": "int",
          "reqSigs:require": "optional",
          "reqSigs:comment": "require signature num",
          "type": "",
          "type:require": "require",
          "type:comment": "script type",
          "addresses:require": "optional",
          "addresses:comment": "address list",
          "addresses": [
            ""
          ],
          "pegout_chain": "",
          "pegout_chain:require": "optional",
          "pegout_chain:comment": "pegout chain hex",
          "pegout_asm": "",
          "pegout_asm:require": "optional",
          "pegout_asm:comment": "pegout script asm string",
          "pegout_hex": "",
          "pegout_hex:require": "optional",
          "pegout_hex:comment": "pegout script hex",
          "pegout_reqSigs": 0,
          "pegout_reqSigs:type": "int",
          "pegout_reqSigs:require": "optional",
          "pegout_reqSigs:comment": "pegout require signature num",
          "pegout_type": "",
          "pegout_type:require": "optional",
          "pegout_type:comment": "pegout script type",
          "pegout_addresses:require": "optional",
          "pegout_addresses:comment": "pegout address list",
          "pegout_addresses": [
            ""
          ]
        },
        "rangeproof": "",
        "rangeproof:comment": "value rangeproof",
        "rangeproof:hint": "Displayed only when the full dump option is used.",
        "rangeproof:require": "optional"
      }
    ]
  }
}