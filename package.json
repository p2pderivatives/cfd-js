{
  "name": "cfd-js",
  "version": "0.0.7",
  "description": "Crypto Finance Development Kit for JavaScript.",
  "author": "Crypto Garage",
  "bugs": {
    "url": "https://github.com/p2pderivatives/cfd-js/issues"
  },
  "homepage": "https://github.com/p2pderivatives/cfd-js",
  "repository": {
    "type": "git",
    "url": "https://github.com/p2pderivatives/cfd-js.git"
  },
  "license": "MIT",
  "main": "index.js",
  "types": "index.d.ts",
  "gypfile": false,
  "scripts": {
    "install": "run-s cmake_clean download_object cmake_install_configure cmake_compile",
    "download_object": "node ./pkg_getter.js",
    "cmake_compile": "cmake-js compile -O wrap_js/build",
    "cmake_install_configure": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDENABLE_TESTS=off --CDTARGET_RPATH=\"@executable_path;/usr/local/lib;/usr/local/lib64;./node_modules/cfd-js/wrap_js/build/Release;../node_modules/cfd-js/wrap_js/build/Release;../../node_modules/cfd-js/wrap_js/build/Release;../../../node_modules/cfd-js/wrap_js/build/Release;../../../../node_modules/cfd-js/wrap_js/build/Release;../../../../../node_modules/cfd-js/wrap_js/build/Release;../../../../../../node_modules/cfd-js/wrap_js/build/Release;./build/Release;./wrap_js/build/Release;./wrap_js/dl_lib/lib\" -C",
    "cmake_release_parallel": "run-s cmake_clean cmake_install_configure cmake_build_parallel",
    "example": "node wrap_js/example.js",
    "elements_example": "node wrap_js/elements_example.js",
    "elements_pegin_example": "node wrap_js/elements_pegin_example.js",
    "ts_example": "ts-node wrap_js/ts_example.ts",
    "test": "jest --no-cache",
    "test_watch": "jest --no-cache --watch",
    "test_quiet": "jest --no-cache --silent",
    "test_logging": "jest --no-cache --silent=false --verbose false",
    "format_all": "run-p code_format js_format",
    "code_format": "clang-format -i --style=file src/*.cpp src/*.h include/cfdjs/*.h addon/*.cpp",
    "js_format": "eslint --ext .js,.ts *.ts *.js wrap_js/ --fix",
    "cmake_all": "run-s cmake_configure cmake_build_parallel",
    "cmake_configure": "run-script-os",
    "cmake_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off",
    "cmake_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C",
    "cmake_quiet": "run-s cmake_quiet_configure cmake_quiet_build",
    "cmake_quiet_configure": "run-script-os",
    "cmake_quiet_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off -i",
    "cmake_quiet_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release -g -i",
    "cmake_quiet_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C -i",
    "cmake_elem_off": "run-s cmake_elem_off_configure cmake_build",
    "cmake_elem_off_configure": "run-script-os",
    "cmake_elem_off_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_ELEMENTS=off",
    "cmake_elem_off_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_ELEMENTS=off --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_elem_off_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_ELEMENTS=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C",
    "cmake_log_all": "run-s cmake_log_configure cmake_build",
    "cmake_log_configure": "run-script-os",
    "cmake_log_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDCFDCORE_DEBUG=on",
    "cmake_log_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release --CDCFDCORE_DEBUG=on -g",
    "cmake_log_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" --CDCFDCORE_DEBUG=on -C",
    "cmake_con_all": "run-s cmake_con_configure cmake_build",
    "cmake_con_configure": "run-script-os",
    "cmake_con_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on",
    "cmake_con_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -g",
    "cmake_con_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -C",
    "cmake_debug_all": "run-s cmake_debug_configure cmake_debug_build",
    "cmake_debug_configure": "run-script-os",
    "cmake_debug_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off -D",
    "cmake_debug_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Debug -g -D",
    "cmake_debug_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Debug\" -C -D",
    "cmake_gcov_all": "run-s cmake_gcov_configure cmake_debug_build",
    "cmake_gcov_configure": "run-script-os",
    "cmake_gcov_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_COVERAGE=on -D",
    "cmake_gcov_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_COVERAGE=on --CDTARGET_RPATH=./wrap_js/build/Debug -g -D",
    "cmake_gcov_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDENABLE_COVERAGE=on --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Debug\" -C -D",
    "cmake_clang": "run-s cmake_clang_configure cmake_build",
    "cmake_clang_configure": "run-script-os",
    "cmake_clang_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off -C",
    "cmake_clang_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release -C",
    "cmake_clang_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C",
    "cmake_static": "run-s cmake_static_configure cmake_build",
    "cmake_static_configure": "run-script-os",
    "cmake_static_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off",
    "cmake_static_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_static_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C",
    "cmake_static_debug": "run-s cmake_static_debug_configure cmake_debug_build",
    "cmake_static_debug_configure": "run-script-os",
    "cmake_static_debug_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDCFDCORE_DEBUG=on -D",
    "cmake_static_debug_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=./wrap_js/build/Release -g -D",
    "cmake_static_debug_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDENABLE_CAPI=off --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=\"@executable_path;./wrap_js/build/Release\" -C -D",
    "cmake_build": "cmake-js build -O wrap_js/build",
    "cmake_debug_build": "cmake-js build -O wrap_js/build -D",
    "cmake_quiet_build": "cmake-js build -O wrap_js/build -i",
    "cmake_build_parallel": "cmake --build wrap_js/build --parallel 2 --config Release",
    "cmake_build_parallel_quick": "cmake --build wrap_js/build --parallel --config Release",
    "cmake_clean": "run-s cmake_clean_build cmake_clean_wally_file",
    "cmake_clean_build": "cmake-js clean -O wrap_js/build",
    "cmake_clean_wally_file": "cd wrap_js && del wally.js",
    "cmake_install_pkg": "run-script-os",
    "cmake_install_pkg:win32": "cmake --install build",
    "cmake_install_pkg:linux": "sudo cmake --install build",
    "cmake_install_pkg:darwin": "sudo cmake --install build",
    "test_all": "run-s ctest test",
    "ctest": "cd wrap_js/build && ctest -C Release",
    "ctest_debug": "cd wrap_js/build && ctest -C Debug",
    "ctest_quiet": "cd wrap_js/build && ctest --quiet -C Release",
    "test_cfdcore": "run-script-os",
    "test_cfdcore:win32": "cd wrap_js/build/Release && cfdcore_test.exe",
    "test_cfdcore:linux": "cd wrap_js/build/Release && ./cfdcore_test",
    "test_cfdcore:darwin": "cd wrap_js/build/Release && ./cfdcore_test",
    "test_cfd": "run-script-os",
    "test_cfd:win32": "cd wrap_js/build/Release && cfd_test.exe",
    "test_cfd:linux": "cd wrap_js/build/Release && ./cfd_test",
    "test_cfd:darwin": "cd wrap_js/build/Release && ./cfd_test",
    "lcov_output": "cd wrap_js/build && make lcov_cfdcore lcov_cfd",
    "coverage": "run-s ctest_debug lcov_output",
    "coverage_all": "run-s cmake_clean cmake_gcov_configure cmake_debug_build ctest_debug lcov_output",
    "doxygen_check": "run-script-os",
    "doxygen_check:win32": "cd doc && doxygen Doxyfile_quiet_all && rmdir /S /Q html_all_quiet",
    "doxygen_check:linux": "cd doc && doxygen Doxyfile_quiet_all && rm -rf html_all_quiet",
    "doxygen_check:darwin": "cd doc && doxygen Doxyfile_quiet_all && rm -rf html_all_quiet",
    "lint_all": "run-s lint_check eslint_check",
    "lint_check": "run-script-os",
    "lint_check:win32": "cd tools && lint_all_quiet.bat",
    "lint_check:linux": "cd tools && ./lint_quiet.sh",
    "lint_check:darwin": "cd tools && ./lint_quiet.sh",
    "eslint_check": "eslint --ext .js,.ts *.ts *.js wrap_js/",
    "git_subm_update": "git submodule -q foreach git fetch -q && git submodule -q update -i",
    "check": "run-s doxygen_check lint_all ctest_quiet test_quiet example elements_example ts_example",
    "check_all": "run-s cmake_clean git_subm_update cmake_quiet doxygen_check ctest_quiet test_quiet example elements_example ts_example lint_all",
    "convert_json": "babel-node ./tools/generate_json_map_class.js --presets env",
    "convert_json_debug": "babel-node ./tools/generate_json_map_class.js mode=debug --presets env"
  },
  "dependencies": {
    "@types/node": "^13.11.0",
    "big-integer": "^1.6.48",
    "bindings": "*",
    "cmake-js": "^5.3.2",
    "del-cli": "^3.0.0",
    "got": "^10.7.0",
    "nan": "^2.14.0",
    "node-addon-api": "^1.6.3",
    "node-gyp": "^5.1.0",
    "npm-run-all": "^4.1.5",
    "run-script-os": "^1.1.1",
    "tape": "^4.13.2",
    "unzipper": "^0.8.14"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^2.26.0",
    "@typescript-eslint/parser": "^2.26.0",
    "babel-cli": "*",
    "babel-preset-env": "*",
    "eslint": "^6.8.0",
    "eslint-config-google": "^0.14.0",
    "jest": "^25.2.7",
    "minimist": "^1.2.5",
    "ts-morph": "^7.0.1",
    "ts-node": "^8.8.2"
  }
}
